safe-number-parser {
  big-decimal {
    # the maximum number of chars that SafeBigDecimal allows
    max-length = 1000
    # the maximum scale that SafeBigDecimal allows (with max-scale=1000: 1e1001 and 1e-1001 would be disallowed)
    max-scale = 1000
  }
  big-integer {
    # the maximum number of chars that SafeBigInteger allows
    max-length = 1000
    # java.math.BigInteger does not support parsing numbers in 1e1000 format
    # by enabling this config, SafeBigInteger will accept the 1e1000 format
    support-e-notation = false
    # the maximum scale that SafeBigInteger allows (with max-scale=1000: 1e1001 and 1e-1001 would be disallowed)
    # this config only applies if you set support-e-notation = true
    max-scale = 1000
    # when you use SafeBigInteger and set support-e-notation = true, the numbers are parsed using BigDecimal
    # when the BigDecimal is converted to BigInteger, the conversion will fail if the value is not exactly mapped to an integer
    # you can relax this by setting enforce-exact = false
    enforce-exact = true
  }
  double {
    # the maximum number of chars that SafeDouble allows
    max-length = 1000
  }
  float {
    # the maximum number of chars that SafeFloat allows
    max-length = 500
  }
}
